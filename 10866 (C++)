#include<iostream>
#include<string>
using namespace std;

class deque {
private:
	int deq[1000] = { NULL };
	int top = 501, bottom = 500;
public:
	void push_front(int x) {
		deq[bottom] = x;
		bottom--;
	}
	void push_back(int x) {
		deq[top] = x;
		top++;
	}
	void pop_front() {
		if (top - bottom == 1)cout << -1 << endl;
		else {
			cout << deq[bottom + 1] << endl;
			bottom++;
		}
	}
	void pop_back() {
		if (top - bottom == 1)cout << -1 << endl;
		else {
			cout << deq[top - 1] << endl;
			top--;
		}
	}
	void size() {
		cout << top - bottom - 1 << endl;
	}
	void empty() {
		top - bottom == 1 ? cout << 1 << endl : cout << 0 << endl;
	}
	void front() {
		if (top - bottom == 1)cout << -1 << endl;
		else cout << deq[bottom + 1] << endl;
	}
	void back() {
		if (top - bottom == 1)cout << -1 << endl;
		else cout << deq[top - 1] << endl;
	}
};

int main()
{
	deque deque1;
	int n;
	cin >> n;

	for (int i = 0; i < n; i++) {
		string order;
		cin >> order;
		if (order == "push_back") {
			int a;
			cin >> a;
			deque1.push_back(a);
		}
		if (order == "push_front") {
			int a;
			cin >> a;
			deque1.push_front(a);
		}
		if (order == "pop_front") {
			deque1.pop_front();
		}
		if (order == "pop_back") {
			deque1.pop_back();
		}
		if (order == "size") {
			deque1.size();
		}
		if (order == "empty") {
			deque1.empty();
		}
		if (order == "front") {
			deque1.front();
		}
		if (order == "back") {
			deque1.back();
		}
	}
	return 0;
}
